@model SafriSoftv1._3.Models.CustomerContainerViewModel

@using Microsoft.Owin;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;
@using System.Linq;
@using System.Configuration;
@using System.Data.SqlClient;
@{
    string userId = IdentityExtensions.GetUserId(User.Identity);
    ApplicationUserManager userManager = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
    var user = string.IsNullOrEmpty(userId) ? null : userManager.FindByIdAsync(userId).Result ?? null;
    var organisationClaim = userManager.GetClaims(userId).First(x => x.Type == "Organisation");
    var organisation = organisationClaim.Value;

    var identityConn = new SqlConnection(ConfigurationManager.ConnectionStrings["IdentityDbContext"].ToString());
    identityConn.Open();
    var identityCmd = identityConn.CreateCommand();
    identityCmd.CommandText = string.Format("SELECT [OrganisationId] from [{0}].[dbo].[Organisations] where OrganisationName = '{1}'", identityConn.Database, organisation);
    var identityReader = identityCmd.ExecuteReader();

    var conn = new SqlConnection(ConfigurationManager.ConnectionStrings["SafriSoftDbContext"].ToString());
    conn.Open();
    var cmd = conn.CreateCommand();
    var cmdProducts = conn.CreateCommand();

    if (identityReader.Read())
    {
        cmd.CommandText = string.Format("SELECT [Id],[CustomerName] from [{0}].[dbo].[Customer] where Status = 'Active' AND OrganisationId = {1}", conn.Database, identityReader.GetInt32(0));

        cmdProducts.CommandText = string.Format("SELECT [Id],[ProductName],[ProductReference] from [{0}].[dbo].[Product] where Status = 'Active' AND OrganisationId = {1}", conn.Database, identityReader.GetInt32(0));
    }


}
@{
    ViewBag.Title = "Customers";
}

<style>
    .fileDate{
        width:80px;
    }

    .buttonWidth {
        text-align: center;
        width: 70px !important;
        min-width: 70px !important;
        max-width: 70px !important;
    }
</style>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-3">
                    @*<div class="small-box bg-white card-outline card-info">
                            <div class="inner text-info">
                                <h3>Customers:</h3>
                                <p>Home / Customers</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-user-friends text-info"></i>
                            </div>
                        </div>*@
                </div><!-- /.col -->
                <div class="col-sm-6">
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header card-header-info">
                            <h4 class="card-title"><i class="fas fa-user-friends"></i> Customers</h4>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <span class="text-right mr-1"><button id="CreateCustomer" type="submit" class="btn btn-light" style="text-align:right !important;display:none;"><i class="fa fa-user text-info"></i> Create customer</button></span>
                            @*<span class="text-right"><button id="order-create-view" type="button" class="btn btn-light" style="display:none;"><i class="fa fa-shopping-cart text-info"></i> Create Order</button></span>*@
                        </div>
                        <div class="card-body">
                            <table id="customer-table" class="table table-bordered ">
                                <thead>
                                    <tr>
                                        @*<th># Customer</th>*@
                                        <th>Date Customer Created</th>
                                        <th>Customer Name</th>
                                        <th>Customer Email</th>
                                        <th>Customer Phone #</th>
                                        <th>Customer Address</th>
                                        <th>Orders</th>
                                        <th>Balance</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>

        </div>
    </div><!-- /.container-fluid -->
</div>
<!-- /.content -->
<!-- Modal -->
<div class="modal fade" id="creat-customer-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@*<i class="fa fa-plus"></i>*@Create Customer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body login-card-body">
                <div class="card">
                    <div class="card-header card-header-info">
                        <h4 class="card-title"><i class="fa fa-pencil"></i> Create Customer</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Name</label>
                                    <input id="customer-name" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Email</label>
                                    <input id="customer-email" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Cell#</label>
                                    <input id="customer-cell" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Address</label>
                                    <input id="customer-address" class="form-control" type="text">
                                </div>
                            </div>
                        </div>
                    </div>


                </div>

            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                <button id="customer-final-create" type="button" class="btn btn-light"><i class="fa fa-user text-info"></i> Create</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<!-- Update Customer Modal -->
<div class="modal fade" id="edit-customer-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@*<i class="fa fa-plus"></i>*@Edit Customer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body login-card-body">
                <div class="card">
                    <div class="card-header card-header-info">
                        <h4 class="card-title"><i class="fa fa-pencil"></i> Edit Customer</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Name</label>
                                    <input id="edit-customer-id" hidden class="form-control" type="text">
                                    <input id="edit-customer-name" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Email</label>
                                    <input id="edit-customer-email" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Cell#</label>
                                    <input id="edit-customer-cell" class="form-control" type="text">
                                </div>
                            </div>
                            <div class="mb-3 col-md-12">
                                <div class="input-group form-group bmd-form-group is-filled">
                                    <label class="bmd-label-floating">Customer Address</label>
                                    <input id="edit-customer-address" class="form-control" type="text">
                                </div>
                            </div>
                        </div>
                    </div>


                </div>

            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                <button id="customer-final-update" type="button" class="btn btn-light"><i class="fa fa-user text-info"></i> Update</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="create-order-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@*<i class="fa fa-plus"></i>*@Create Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body login-card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group">
                            <div class="input-group-prepend">
                                <button class="btn btn-light dropdown-toggle" aria-expanded="false" type="button" data-toggle="dropdown">
                                    Choose Customer
                                </button>
                                <ul class="dropdown-menu">
                                    @using (var reader = cmd.ExecuteReader())
                                    {
                                        while (reader.Read())
                                        {
                                            <li id="@reader.GetInt32(0)-customer" name="@reader.GetString(1)" class="dropdown-item" onclick="populateCustomer(this.id)">@reader.GetString(1)</li>
                                        }
                                    }
                                </ul>
                            </div>
                            <input id="customer-name-input" class="form-control p-3" disabled type="text">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group">
                            <div class="input-group-prepend">
                                <button class="btn btn-light dropdown-toggle" aria-expanded="false" type="button" data-toggle="dropdown">
                                    Choose Product
                                </button>
                                <ul class="dropdown-menu">
                                    @using (var reader = cmdProducts.ExecuteReader())
                                    {
                                        while (reader.Read())
                                        {
                                            <li id="@reader.GetString(2).Replace('/','_')" name="@reader.GetString(1)" class="dropdown-item" onclick="populateProduct(this.id)">@reader.GetString(1)</li>
                                        }
                                    }
                                </ul>
                            </div>
                            <input id="product-name-input" class="form-control p-3" disabled type="text">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating">Quantity</label>
                            <input id="number-of-items" class="form-control" type="text">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating">Invoice Due Date</label>
                            <input id="invoiceDueDate" class="form-control" type="date">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating">Delivery Date</label>
                            <input id="number-of-days" class="form-control" type="date">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating">Shipping Cost</label>
                            <input id="shipping-cost" class="form-control" type="text">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating"></label>
                            <select id="selectedInvoiceAccount" class="safriSelect2 form-control" style="min-width: 100%; width: 100%; min-height: 100px;">
                                <option value="-100">SELECT INVOICE ACCOUNT</option>
                                @foreach (var account in Model.TrialBalanceAccounts)
                                {
                                    <option value="@account.Id">@account.AccountNumber - @account.AccountName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating"></label>
                            <select id="selectedDebtorsAccount" class="safriSelect2 form-control" style="min-width: 100%; width: 100%; min-height: 100px;">
                                <option value="-100">SELECT DEBTORS ACCOUNT</option>
                                @foreach (var account in Model.TrialBalanceAccounts)
                                {
                                    <option value="@account.Id">@account.AccountNumber - @account.AccountName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group form-group bmd-form-group is-filled">
                            <label class="bmd-label-floating"></label>
                            <select id="selectedVatOption" class="safriSelect2 form-control" style="min-width:100%;width:100%; min-height:100px;">
                                <option value="-100">SELECT ITEM VAT</option>
                                @foreach (var vat in Model.VatOptions)
                                {
                                    <option value="@vat.Id">@vat.Percentage% - @vat.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                <button id="order-final-create" type="button" class="btn btn-light"><i class="fa fa-shopping-cart text-info"></i> Create</button>
                <button id="order-final-wait" type="button" class="btn btn-light"><i class="fas fa-spinner fa-pulse text-success"></i> Please wait...</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<!-- Modal -->
<div class="modal fade" id="customer-orders">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="customer-orders-title" class="modal-title">@*<i class="fa fa-plus"></i>*@</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="customer-order-table" class="table table-bordered ">
                            <thead>
                                <tr>
                                    <th>Order #</th>
                                    <th>Product Name</th>
                                    <th>Delivery Date</th>
                                    <th>Invoice Amount</th>
                                    <th>Status</th>
                                    <th>Progress</th>
                                    <th>%</th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<!-- Modal -->
<div class="modal fade" id="customerFiles">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="customerFilesTitle" class="modal-title">@*<i class="fa fa-plus"></i>*@</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-header card-header-info">
                        <h4 class="card-title"><i class="fa fa-paste"></i> Add documents</h4>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div id="dropzone" class="fade">
                            <h3>Drag & Drop File</h3>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="customerFilesTable" class="table">
                            <thead>
                                <tr>
                                    <th>Date Created</th>
                                    <th style="width:400px;">Filename</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>



@section scripts{

    <script>
        //$(function () {
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
            if (userWrite == 'true') {
                $('#CreateCustomer').show();
                $('#order-create-view').show();
            }
        })

        var customerDataTable = $("#customer-table").DataTable({
            "responsive": true,
            "autoWidth": false,
            "info": true,
            lengthMenu: [[10, 20, 30, -1], [10, 20, 30, "All"]],
            ajax: {
                url: '/api/Inventory/GetCustomers/',
                method: 'POST',
                dataType: 'json',
                data: {
                    Start: $('#globalStart').val(),
                    End: $('#globalEnd').val()
                },
                "dataSrc": ""
            },
            'columns': [
                //{
                //    'data': 'Id',
                //    'searchable': true
                //},
                {
                    'data': 'DateCustomerCreated',
                    'searchable': true
                },
                {
                    'data': 'CustomerName',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        return '<td id="' + data + '" >' + data + '</td>';
                    }
                },
                {
                    'data': 'CustomerEmail',
                    'searchable': true
                },
                {
                    'data': 'CustomerCell',
                    'searchable': true
                },
                {
                    'data': 'CustomerAddress',
                    'searchable': true
                },
                {
                    'data': 'NumberOfOrders',
                    'searchable': true,
                    className: 'buttonWidth',
                    ordering: false,
                    'render': function (data, type, full, meta) {
                        return '<td class="text-right py-0 align-middle"> <div class="btn-group btn-group-sm"> <button id="' + full.Id + '" name="' + full.CustomerName + '" data-toggle="tooltip" data-placement="left" title="View customer orders" type="button" onclick="customerFeatures(this.id, this.name)" class="btn btn-white"><i class="fa fa-eye text-info"></i></button> <a class="btn btn-white" href="#">' + data + '</a> </div> </td>';
                    }
                },
                {
                    'data': 'Balance',
                    'searchable': true,
                    'className': 'text-right',
                    'render': function (data, type, full, meta) {

                        if (type === 'display')
                            return '<a href="#">' + new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency: currency }).format(data) + '</a>';
                        else
                            return data;
                    }
                },
                {
                    'data': 'Id',
                    className: 'buttonWidth',
                    'render': function (data, type, full, meta) {

                        if (userWrite == 'true') {
                            return `<button class="btn btn-light" data-toggle="dropdown"><span class="fas fa-list-ul text-info"></span></button>
                            <div class="dropdown-menu dropdown-menu-right">
                            <a href="#" class="dropdown-item" onclick="$('.modal-title').text('${full.CustomerName}'); editCustomerDetails(${data})"">Edit Details</a>
                            <a href="#" class="dropdown-item" onclick="$('.modal-title').text('${full.CustomerName}'); attachCustomerFiles(${data}, '${full.CustomerName}')">Upload Attachments</a>
                            </div>`;
                            //return '<td class="text-right py-0 align-middle"> <div class="btn-group btn-group-sm"> <a id="' + full.Id + '" class="btn btn-white" href="#" data-toggle="tooltip" data-placement="left" title="Edit customer details" onclick="editCustomerDetails(this.id)"><i class="fas fa-edit text-info"></i></a> ' +
                            //    `<a id="${full.Id}" class="btn btn-white" href="#" data-toggle="tooltip" data-placement="left" title="Attach files" onclick="attachCustomerFiles(this.id, '${full.CustomerName}')"><i class="fas fa-file text-info"></i></a> </div> </td>`
                        } else {
                            return '';
                        }

                    }
                }
            ]
        });

        //$('#globalRefresh').on('click', function () {
        //    refresh();
        //});

        //function refresh() {

        //    var startDate = $('#globalStart').val();
        //    var endDate = $('#globalEnd').val();

        //    var data = {
        //        Start: startDate,
        //        End: endDate
        //    };

        //    var url = '/api/Inventory/GetCustomers/';

        //    SafriSoftPostRequest(url, data, (response) => {
        //        debugger;
        //        customerDataTable.clear();
        //        customerDataTable.rows.add(response.obj);
        //        customerDataTable.draw(false);
        //    });

        //}

        var _editId = 0;

        function attachCustomerFiles(id,name) {
            _editId = id;
            $('#customerFilesTitle').text(name);
            $('#customerFiles').modal('show');
            customerFilesTable.ajax.url('/api/Inventory/GetCustomerDocuments/' + id).load();

            $('#dropzone').fileupload({
                dropZone: $('#dropzone'),
                dataType: "application/json",
                url: '/api/Inventory/UploadDocument/' + id
            }).on('fileuploadadd', function (e, data) {
                data.submit();
            }).on('fileuploadalways', function (e, data) {
                customerFilesTable.ajax.url('/api/Inventory/GetCustomerDocuments/' + id).load();

                var dropZone = $('#dropzone');
                dropZone.removeClass('hover');
            });

            $(document).bind('dragover', function (e) {
                var dropZone = $('#dropzone');
                dropZone.addClass('hover');
            });

            $(document).bind('dragleave', function (e) {
                var dropZone = $('#dropzone');
                dropZone.removeClass('hover');
            });

            $(document).bind('drop dragover', function (e) {
                e.preventDefault();
            });
        }

        var customerFilesTable = $("#customerFilesTable").DataTable({
            "responsive": true,
            "autoWidth": false,
            "success": true,
            lengthMenu: [[10, 20, 30, -1], [10, 20, 30, "All"]],
            ajax: {
                url: '/api/Inventory/GetCustomerDocuments/0',
                method: 'GET',
                "dataSrc": "obj"
            },
            'columns': [
                {
                    'data': 'DateFileCreated',
                    className: 'fileDate',
                    'searchable': true
                },
                {
                    'data': 'FileName',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        return '<td id="' + data + '" >' + data + '</td>';
                    }
                },
                {
                    'data': 'Id',
                    className: 'fileDate',
                    'render': function (data, type, full, meta) {
                        return '<td class="text-right py-0 align-middle"> <div class="btn-group btn-group-sm"> <a id="' + full.Id + '" class="btn btn-white" href="DownloadFile?fileId=' + full.Id + '"><i class="fas fa-download text-info"></i></a> </div> </td>'
                    }
                }
            ]
        });

        function downloadFile(fileId) {

            if (fileId != "") {
                $.ajax({
                    url: '/Inventory/DownloadCustomerFile?fileId=' + fileId,
                    method: 'POST',
                    dataType: 'binary',
                    processData: false
                }).done(function (data) {
                    console.log(data);

                });
            }

        }

        customerDataTable.on('draw', function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        var date = new Date();
        var createdDate = date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();

        $('#CreateCustomer').on('click', function () {
            $('#creat-customer-modal').modal('show');
        });

        $('#customer-final-create').on('click', function () {
            var customerName = $("#customer-name").val();
            var customerEmail = $("#customer-email").val();
            var customerCell = $("#customer-cell").val();
            var customerAddress = $("#customer-address").val();
            var dateCustomerCreated = createdDate;

            if (customerName != "" && customerAddress != "" && (customerEmail != "" || customerCell != "")) {

                var customer = {
                    'CustomerName': customerName,
                    'CustomerEmail': customerEmail,
                    'CustomerCell': customerCell,
                    'CustomerAddress': customerAddress,
                    'DateCustomerCreated': dateCustomerCreated
                };

                $.ajax({
                    url: '/api/Inventory/CustomerCreate',
                    method: 'POST',
                    dataType: 'json',
                    data: customer,
                    contextType: "application/json",
                    traditional: true
                }).done(function (data) {
                    if (data.Success) {
                        console.log(data);
                        $('#creat-customer-modal').modal('hide');
                        toastr.success('Successfully created customer search customer table for confirmation!');
                        setTimeout(function () { location.reload() }, 500);
                        //customerDataTable.ajax.reload();
                    } else {
                        console.log(data);
                        toastr.error(data.Error);
                    }

                });
            } else {
                if (customerName == "") {
                    toastr.error('Customer name cannot be empty!');
                }
                if (customerAddress == "") {
                    toastr.error('Customer address cannot be empty!');
                }
                if (customerEmail == "" || customerCell == "") {
                    toastr.error('Customer email or cell number cannot be empty!');
                }
            }

        });

        function customerDeleteDetails(id) {
            var customer = {
                'Id': id
            };

            $.ajax({
                url: '/api/Inventory/CustomerDelete',
                method: 'POST',
                dataType: 'json',
                data: customer,
                contextType: "application/json",
                traditional: true
            }).done(function (data) {
                if (data.Success) {
                    toastr.success('Successfully deleted customer search customer table for confirmation!');
                    customerDataTable.ajax.reload();
                } else {
                    console.log(data);
                    toastr.error('An error occured while trying to delete customer contact administrator!');
                }

            });
        }

        $('#customer-final-update').on('click', function () {
            var customerName = $("#edit-customer-name").val();
            var customerEmail = $("#edit-customer-email").val();
            var customerCell = $("#edit-customer-cell").val();
            var customerAddress = $("#edit-customer-address").val();
            var customerId = $("#edit-customer-id").val();

            if (customerName != "" && customerAddress != "" && (customerEmail != "" || customerCell != "")) {

                var customer = {
                    'Id': customerId,
                    'CustomerName': customerName,
                    'CustomerEmail': customerEmail,
                    'CustomerCell': customerCell,
                    'CustomerAddress': customerAddress
                };

                $.ajax({
                    url: '/api/Inventory/CustomerUpdate',
                    method: 'POST',
                    dataType: 'json',
                    data: customer,
                    contextType: "application/json",
                    traditional: true
                }).done(function (data) {
                    if (data.Success) {
                        console.log(data);
                        $('#edit-customer-modal').modal('hide');
                        toastr.success('Successfully updated customer search customer table for confirmation!');
                        customerDataTable.ajax.reload();
                    } else {
                        console.log(data);
                        toastr.error('An error occured while trying to save customer contact administrator!');
                    }

                });
            } else {
                if (customerName == "") {
                    toastr.error('Customer name cannot be empty!');
                }
                if (customerAddress == "") {
                    toastr.error('Customer address cannot be empty!');
                }
                if (customerEmail == "" || customerCell == "") {
                    toastr.error('Customer email or cell number cannot be empty!');
                }
            }

        });


        //});

        var customerOrderDataTable = $("#customer-order-table").DataTable({
            "paging": false,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            lengthMenu: [[10, 20, 30, -1], [10, 20, 30, "All"]],
            ajax: {
                url: '/api/Inventory/GetOrders/',
                method: 'POST',
                dataType: 'json',
                data: {
                    Start: $('#globalStart').val(),
                    End: $('#globalEnd').val()
                },
                "dataSrc": ""
            },
            'columns': [
                {
                    'data': 'OrderId',
                    'searchable': true
                },
                {
                    'data': 'ProductName',
                    'searchable': true
                },
                {
                    'data': 'ExpectedDeliveryDate',
                    'searchable': true
                },
                {
                    'data': 'OrderWorth',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        return new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency: currency }).format(data);
                    }
                },
                {
                    'data': 'OrderStatus',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        if (full.OrderStatus == "Processed") {
                            return '<span class="badge bg-danger">' + data + '</span>'
                        }
                        if (full.OrderStatus == "Packaged") {
                            return '<span class="badge bg-warning">' + data + '</span>'
                        }
                        if (full.OrderStatus == "InTransit") {
                            return '<span class="badge bg-info">' + data + '</span>'
                        }
                        if (full.OrderStatus == "Delivered") {
                            return '<span class="badge bg-success">' + data + '</span>'
                        }
                    }
                },
                {
                    'data': 'OrderProgress',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        if (full.OrderStatus == "Processed") {
                            return '<div class="progress"> <div class="progress-bar progress-bar-striped bg-danger" style="width:' + data + '%"></div> </div><div class="progress"> <div class="progress-bar progress-bar-striped bg-danger" style="width:' + data + '%"></div> </div>'
                        }
                        if (full.OrderStatus == "Packaged") {
                            return '<div class="progress"> <div class="progress-bar progress-bar-striped bg-warning" style="width:' + data + '%"></div> </div><div class="progress"> <div class="progress-bar progress-bar-striped bg-warning" style="width:' + data + '%"></div> </div>'
                        }
                        if (full.OrderStatus == "InTransit") {
                            return '<div class="progress"> <div class="progress-bar progress-bar-striped bg-info" style="width:' + data + '%"></div> </div><div class="progress"> <div class="progress-bar progress-bar-striped bg-info" style="width:' + data + '%"></div> </div>'
                        }
                        if (full.OrderStatus == "Delivered") {
                            return '<div class="progress"> <div class="progress-bar progress-bar-striped bg-success" style="width:' + data + '%"></div> </div><div class="progress"> <div class="progress-bar progress-bar-striped bg-success" style="width:' + data + '%"></div> </div>'
                        }
                    }
                },
                {
                    'data': 'OrderProgress',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        if (full.OrderStatus == "Processed") {
                            return '<span class="badge bg-danger">' + data + '%</span>'
                        }
                        if (full.OrderStatus == "Packaged") {
                            return '<span class="badge bg-warning">' + data + '%</span>'
                        }
                        if (full.OrderStatus == "InTransit") {
                            return '<span class="badge bg-info">' + data + '%</span>'
                        }
                        if (full.OrderStatus == "Delivered") {
                            return '<span class="badge bg-success">' + data + '%</span>'
                        }
                    }
                }
            ]
        });

        function customerFeatures(id, name) {
            //customerOrderDataTable.ajax.url('/api/Inventory/GetOrders/' + id).load();
            var startDate = $('#globalStart').val();
            var endDate = $('#globalEnd').val();

            var data = {
                Id: id,
                Start: startDate,
                End: endDate
            };

            var url = '/api/Inventory/GetCustomerOrders';

            SafriSoftPostRequest(url, data, (response) => {
                console.log(response);
                debugger;
                customerOrderDataTable.clear();
                customerOrderDataTable.rows.add(response);
                customerOrderDataTable.draw();
            });
            $("#customer-orders-title").text(name + " Orders");
            $('#customer-orders').modal('show');
        }

        //$('#globalRefresh').on('click', function () {
        //    refresh();
        //});

        //function refresh() {
        //    var startDate = $('#globalStart').val();
        //    var endDate = $('#globalEnd').val();

        //    var data = {
        //        Start: startDate,
        //        End: endDate
        //    };

        //    var url = '/api/Inventory/GetOrders';

        //    SafriSoftPostRequest(url, data, (response) => {
        //        console.log(response);
        //        customerOrderDataTable.clear();
        //        customerOrderDataTable.rows.add(response);
        //        customerOrderDataTable.draw();
        //    });

        //}

        //refresh();


        function editCustomerDetails(id) {

            $.ajax({
                url: '/api/Inventory/GetCustomer/' + id,
                method: 'GET',
                dataType: 'json'
            }).done(function (data) {
                console.log(data);
                $('#edit-customer-modal').modal('show');
                $('#edit-customer-name').val(data[0].CustomerName);
                $('#edit-customer-email').val(data[0].CustomerEmail);
                $('#edit-customer-cell').val(data[0].CustomerCell);
                $('#edit-customer-address').val(data[0].CustomerAddress);
                $('#edit-customer-id').val(id);

            });

        }

    </script>


    <script src="~/Scripts/Inventory/orders.js"></script>
    <script src="~/Scripts/Inventory/app.inbox.js"></script>
}