
@{
    ViewBag.Title = "TrialBalanceReport";
}

<style>
    .amountWidth {
        width: 200px;
    }

    a:hover {
        color: blue !important;
    }
</style>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-3">
                    @*<div class="small-box bg-white border-left border-info safri-input-style">
                            <div class="inner">
                                <h3>Products:</h3>
                                <p>Home / Stock</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-dolly text-dark"></i>
                            </div>
                        </div>*@
                </div><!-- /.col -->
                <div class="col-sm-6">
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-2" style="padding:0px !important;">
                    <div class="card">
                        <div class="card-header card-header-info">
                            <h4 class="card-title"><i class="fa fa-file"></i> Filter Trial Balance</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="mb-1 mt-3 col-md-12">
                                    <div class="input-group form-group bmd-form-group is-filled">
                                        <label class="bmd-label-floating">From</label>
                                        <input id="start" class="form-control" type="date">
                                    </div>
                                </div>
                                <div class="mb-1 mt-3 col-md-12">
                                    <div class="input-group form-group bmd-form-group is-filled">
                                        <label class="bmd-label-floating">To</label>
                                        <input id="end" class="form-control" type="date">
                                    </div>
                                </div>
                                <div class="mb-1 mt-3 col-md-12">
                                    <button id="" type="submit" class="btn btn-block btn-outline-info" onclick="refreshTrialBalanceReportDT()">Refresh</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-10">
                    <div class="card">
                        <div class="card-header card-header-info">
                            <h4 class="card-title"><i class="fa fa-file"></i> Trial Balance Report</h4>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">


                            <table id="trialBalanceReportTable" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Account Number</th>
                                        <th>Account Name</th>
                                        <th>Balance</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
            </div>

        </div>
    </div><!-- /.container-fluid -->
</div>
<!-- /.content -->
<!-- Modal -->
<div class="modal fade" id="trialBalanceItems">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@*<i class="fa fa-plus"></i>*@Gl Accounts</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body login-card-body">
                <table id="trialBalanceItemsTable" class="table table-bordered ">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Gl Account Number</th>
                            <th>Gl Account Name</th>
                            <th>Gl Account Description</th>
                            <th>Debit</th>
                            <th>Credit</th>
                        </tr>
                    </thead>

                </table>
            </div>
            <div class="modal-footer justify-content-right">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section scripts{
    <script>

        $(document).ready(function () {
            var today = new Date();
            var monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);

            var startDay = '01';
            var endDay = monthEnd.getDate();

            document.getElementById("start").defaultValue = today.getFullYear() + "-" + ("0" + (today.getMonth() + 1)).slice(-2) + "-" + startDay;
            document.getElementById("end").defaultValue = today.getFullYear() + "-" + ("0" + (today.getMonth() + 1)).slice(-2) + "-" + endDay;

            refreshTrialBalanceReportDT();
        });

        let exportFormatter = {
            format: {
                body: function (data, row, column, node) {
                    // Strip $ from salary column to make it numeric
                    return column === 4 ? data.replace(/[R]/g, '') : data;
                }
            }
        };

        var trialBalanceReportTable = $("#trialBalanceReportTable").DataTable({
            scrollY: 550,
            ordering: false,
            dom: '<"bottom row"<"center-col col-md-6"B><"right-col col-md-6"f>>rtip',
            lengthMenu: [[-1], ["All"]],
            "buttons": [{ extend: 'csv', exportOptions: { orthogonal: { display: ':null' } } }, { extend: 'excel', exportOptions: { orthogonal: { display: ':null' } } }],
            "order": [],
            //ajax: {
            //    url: '/api/Accounting/GetTrialBalanceReport/0/0',
            //    method: 'GET',
            //    "dataSrc": "Obj"
            //},
            'columns': [
                {
                    'data': 'Period',
                    'searchable': true,
                    sortable: false,
                    'className': 'indexStyle',
                },
                {
                    'data': 'AccountNumber',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        if (data != 0) {
                            return '<td id="' + data + '" >' + data + '</td>';
                        } else {
                            return '<td id="' + data + '" ></td>';
                        }

                    }
                },
                {
                    'data': 'AccountName',
                    'searchable': true
                },
                {
                    className: "dt-control text-right",
                    'data': 'Total',
                    'searchable': true,
                    'render': function (data, type, full, meta) {

                        if (type === 'display')
                            return '<a href="#">' + new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency }).format(data) + '</a>';
                        else
                            return data;
                    }
                },
            ]
        });



        var trialBalanceItemsTable = $("#trialBalanceItemsTable").DataTable({
            dom: '<"bottom row"<"center-col col-md-6"B><"right-col col-md-6"f>>rtip',
            "buttons": [{ extend: 'csv', exportOptions: { orthogonal: { display: ':null' } } }, { extend: 'excel', exportOptions: { orthogonal: { display: ':null' } } }],
            lengthMenu: [[10], ["10"]],
            ordering: false,
            'columns': [
                {
                    'data': 'DateStr',
                    'searchable': true,
                },
                {
                    'data': 'AccountNumber',
                    'searchable': true,
                    'render': function (data, type, full, meta) {
                        return '<td id="' + data + '" >' + data + '</td>';
                    }
                },
                {
                    'data': 'AccountName',
                    'searchable': true
                },
                {
                    'data': 'AccountDescription',
                    'searchable': true
                },
                {
                    'searchable': true,
                    className: "text-right",
                    render: function (data, type, full, meta) {
                        if (type == 'display') {
                            return new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency }).format(full.Debit);
                        } else {
                            return full.Debit;
                        }

                    }
                },
                {
                    'searchable': true,
                    className: "text-right",
                    render: function (data, type, full, meta) {
                        if (type == 'display') {
                            return new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency }).format(full.Credit);
                        } else {
                            return full.Credit;
                        }
                    }
                }
            ]
        });

        function format(d) {
            console.log(d);
            var data = "";
            for (var i = 0; i < d.TrialBalanceItems.length; i++) {
                data += '<tr><td>' + d.TrialBalanceItems[i].DateStr + '</td><td>' + d.TrialBalanceItems[i].AccountNumber + '</td><td> ' + d.TrialBalanceItems[i].AccountName + '</td><td> ' + new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency }).format(d.TrialBalanceItems[i].Debit) + '</td><td> ' + new Intl.NumberFormat(currencyIsoName, { style: 'currency', currency }).format(d.TrialBalanceItems[i].Credit) + '</td></tr>';
            }
            // `d` is the original data object for the row
            return (
                '<table class="table-bordered"><tbody>' + data + '</tbody></table>'
            );
        }

        // Add event listener for opening and closing details
        trialBalanceReportTable.on('click', 'td.dt-control', function (e) {
            let tr = e.target.closest('tr');
            let row = trialBalanceReportTable.row(tr);

            trialBalanceItemsTable.clear();
            trialBalanceItemsTable.rows.add(row.data().TrialBalanceItems);
            trialBalanceItemsTable.draw();

            $("#trialBalanceItems").modal('show');
            //if (row.child.isShown()) {
            //    // This row is already open - close it
            //    row.child.hide();
            //}
            //else {
            //    // Open this row
            //    row.child(format(row.data())).show();
            //}
        });


        function refreshTrialBalanceReportDT() {

            var start = $("#start").val();
            var end = $("#end").val();

            var vm = {
                'Start': start,
                'End': end
            };

            var url = '/api/Accounting/GetTrialBalanceReport';

            SafriSoftPostRequest(url, vm, (data) => {
                if (data.Success) {
                    trialBalanceReportTable.clear();
                    trialBalanceReportTable.rows.add(data.Obj);
                    trialBalanceReportTable.draw();
                } else {
                    toastr.error(data.Message);
                }
            });

            //var period = $("#period").val().split("-");

            //if (period != null && period != '') {

            //    var month = period[1];
            //    var year = period[0];

            //    trialBalanceReportTable.ajax.url('/api/Accounting/GetTrialBalanceReport/' + month + '/' + year).load();
            //} else {
            //    toastr.error("Please select a period");
            //}
        }

    </script>
}
